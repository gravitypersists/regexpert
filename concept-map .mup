{
  "title": "Regex ",
  "id": 1,
  "formatVersion": 2,
  "ideas": {
    "1": {
      "title": "A character in the expression maps to a character in the search.",
      "id": 3,
      "ideas": {
        "1": {
          "title": "There are special characters that correspond to special functions",
          "id": 4,
          "ideas": {
            "1": {
              "title": "\\",
              "id": 6,
              "ideas": {
                "1": {
                  "title": "The immediate character following \\ in the expression is searched for",
                  "id": 8,
                  "ideas": {}
                }
              },
              "attr": {
                "position": [
                  184.9142135623731,
                  -319,
                  1
                ],
                "style": {}
              }
            },
            "2": {
              "title": "|",
              "id": 9,
              "ideas": {
                "1": {
                  "title": "OR operator - everything before it OR everything after it",
                  "id": 10,
                  "ideas": {}
                }
              },
              "attr": {
                "style": {}
              }
            },
            "3": {
              "title": "^",
              "id": 13
            },
            "4": {
              "title": "$",
              "id": 14,
              "ideas": {}
            },
            "5": {
              "title": "*",
              "id": 17
            },
            "6": {
              "title": "+",
              "id": 18
            },
            "7": {
              "title": "?",
              "id": 39
            },
            "8": {
              "title": "( )",
              "id": 40
            },
            "9": {
              "title": "[ ]",
              "id": 41,
              "ideas": {
                "1": {
                  "title": "Character Class",
                  "id": 54,
                  "ideas": {
                    "1": {
                      "title": "Matches only a single character",
                      "id": 55
                    },
                    "2": {
                      "title": "Order of characters in the class do not matter",
                      "id": 57
                    },
                    "3": {
                      "title": "You can use a hyphen to specify a range of characters",
                      "id": 59,
                      "ideas": {
                        "1": {
                          "title": "[a-z]",
                          "id": 60,
                          "ideas": {}
                        },
                        "2": {
                          "title": "[A-Z]",
                          "id": 62
                        },
                        "3": {
                          "title": "[0-9]",
                          "id": 63,
                          "ideas": {}
                        }
                      }
                    },
                    "4": {
                      "title": "You can negate a character class with a ^ after the first [ like so [^.]",
                      "id": 64
                    }
                  }
                }
              }
            },
            "10": {
              "title": "{ }",
              "id": 42
            },
            "11": {
              "title": "There are also shorthand expressions that map to specific functions (these are character classes)",
              "id": 47,
              "ideas": {
                "1": {
                  "title": "\\d",
                  "id": 48,
                  "ideas": {}
                },
                "2": {
                  "title": "\\s",
                  "id": 50,
                  "ideas": {
                    "1": {
                      "title": "whitespace character",
                      "id": 71
                    }
                  }
                },
                "3": {
                  "title": "\\w",
                  "id": 51,
                  "ideas": {
                    "1": {
                      "title": "\"word character\" matches [A-Za-z0-9_]",
                      "id": 67
                    }
                  }
                },
                "4": {
                  "title": "You can negate these shorthand expressions by uppercasing them, ex: \\D, \\S, \\W",
                  "id": 52
                }
              },
              "attr": {
                "style": {}
              }
            },
            "2.5": {
              "title": ".",
              "id": 38,
              "ideas": {
                "1": {
                  "title": "Matches any character (not \\n usually, though)",
                  "id": 73
                }
              }
            },
            "1.5": {
              "title": "In order to search for a special character, you will need to escape it",
              "id": 43,
              "ideas": {},
              "attr": {
                "position": [
                  126,
                  -261,
                  3
                ],
                "style": {}
              }
            }
          }
        }
      }
    }
  },
  "links": [
    {
      "ideaIdFrom": 6,
      "ideaIdTo": 43,
      "attr": {
        "style": {
          "color": "#FF0000",
          "lineStyle": "dashed"
        }
      }
    },
    {
      "ideaIdFrom": 47,
      "ideaIdTo": 54,
      "attr": {
        "style": {
          "color": "#FF0000",
          "lineStyle": "dashed"
        }
      }
    },
    {
      "ideaIdFrom": 63,
      "ideaIdTo": 48,
      "attr": {
        "style": {
          "color": "#FF0000",
          "lineStyle": "dashed"
        }
      }
    }
  ]
}